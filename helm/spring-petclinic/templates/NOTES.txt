1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.petclinic.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "spring-petclinic.app.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.petclinic.service.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "spring-petclinic.app.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "spring-petclinic.app.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.petclinic.service.port }}
{{- else if contains "ClusterIP" .Values.petclinic.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "spring-petclinic.app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

{{- if .Values.database.enabled }}
2. Database Information:
   Database Host: {{ include "spring-petclinic.database.fullname" . }}
   Database Port: {{ .Values.database.service.port }}
   Database Name: {{ .Values.database.auth.database }}
   Database User: {{ .Values.database.auth.username }}
{{- end }}

3. Check the status of your deployment:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "spring-petclinic.app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

4. View logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "spring-petclinic.app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

{{- if .Values.database.enabled }}
5. Database logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "spring-petclinic.database.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
{{- end }} 